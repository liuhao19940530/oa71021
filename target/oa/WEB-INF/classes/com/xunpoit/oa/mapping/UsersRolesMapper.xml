<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xunpoit.oa.dao.UsersRolesMapper" >
  <resultMap id="BaseResultMap" type="com.xunpoit.oa.entity.UsersRoles" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <!-- 多对一的关系 -->
    <association property="user"
    			 javaType="com.xunpoit.oa.entity.User"
    			 select="selectUserById"
    			 column="user_id"
    />
    
    <association property="role"
    			 javaType="com.xunpoit.oa.entity.Role"
    			 select="selectRoleById"
    			 column="role_id"
    />
    
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, role_id, level
  </sql>
  
  <!-- 查询用户User和角色Role -->
  <select id="selectUserById" parameterType="java.lang.Integer" resultType="com.xunpoit.oa.entity.User">
     select id,user_name userName,password from t_user
     where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectRoleById" parameterType="int" resultType="com.xunpoit.oa.entity.Role">
     select id,name from t_role
     where id = #{id}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_users_roles
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 根据用户查询其已经分配的所有角色 -->
  <select id="selectUsersRolesListByUser" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    from t_users_roles
    where user_id = #{userId}
    order by level
  </select>
  
  <!-- 根据传递过来的userId和desc参数，判断是升序还是降序排列 -->
  <select id="selectRoleListByUser" resultType="com.xunpoit.oa.entity.Role" parameterType="java.util.Map">
     select
        r.id,r.name
     from t_users_roles urs
     inner join t_role r on urs.role_id = r.id
     where urs.user_id = #{userId}
     order by level
     <if test="desc==1">
         desc
     </if>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_users_roles
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xunpoit.oa.entity.UsersRoles" >
    insert into t_users_roles (id, user_id, role_id, 
      level)
    values (#{id,jdbcType=INTEGER}, #{user.id,jdbcType=INTEGER}, #{role.id,jdbcType=INTEGER}, 
      #{level,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xunpoit.oa.entity.UsersRoles" >
    insert into t_users_roles
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="user != null" >
        user_id,
      </if>
      <if test="role != null" >
        role_id,
      </if>
      <if test="level != null" >
        level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="user != null" >
        #{user.id,jdbcType=INTEGER},
      </if>
      <if test="role != null" >
        #{role.id,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xunpoit.oa.entity.UsersRoles" >
    update t_users_roles
    <set >
      <if test="user != null" >
        user_id = #{user.id,jdbcType=INTEGER},
      </if>
      <if test="role != null" >
        role_id = #{role.id,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xunpoit.oa.entity.UsersRoles" >
    update t_users_roles
    set user_id = #{user.id,jdbcType=INTEGER},
      role_id = #{role.id,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>